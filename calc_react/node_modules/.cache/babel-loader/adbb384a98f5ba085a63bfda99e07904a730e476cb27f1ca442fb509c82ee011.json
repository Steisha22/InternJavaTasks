{"ast":null,"code":"const receiveExpressions = expressions => ({\n  expressions,\n  type: 'RECEIVE_EXPRESSIONS'\n});\nconst requestExpressions = () => ({\n  type: 'REQUEST_EXPRESSIONS'\n});\nconst errorReceiveExpressions = () => ({\n  type: 'ERROR_RECEIVE_EXPRESSIONS'\n});\n\n// const getExpressions = (expressionsCount) => new Promise((onSuccess) => {\n//     setTimeout(\n//         () => onSuccess(Array\n//         .from(new Array(expressionsCount).keys())\n//         .map(index => ({ name: ['2 + 2', '3 - 2', '25 / 5', '4 * 4']}))),\n//         2000\n//     );\n// });\n\nconst getExpressions = expressionsCount => {\n  return fetch(`localhost/8080?${expressionsCount}`).then(response => response.json()).then(json => {\n    //parse(json)\n  });\n};\nconst fetchExpresions = _ref => {\n  let {\n    expressionsCount\n  } = _ref;\n  return dispatch => {\n    dispatch(requestExpressions()); // Повідомляю стору, що роблю запит \n    return getExpressions(expressionsCount) // Викликаю функцію запиту студентів\n    .then(expressions => dispatch(receiveExpressions(expressions))) // Успіх\n    .catch(() => dispatch(errorReceiveExpressions())); // Помилка\n  };\n};\n\nexport default {\n  fetchExpresions\n};","map":{"version":3,"names":["receiveExpressions","expressions","type","requestExpressions","errorReceiveExpressions","getExpressions","expressionsCount","fetch","then","response","json","fetchExpresions","dispatch","catch"],"sources":["C:/Study/calc_react/src/pages/Calculator/actions/calculator.js"],"sourcesContent":["const receiveExpressions = expressions => ({\r\n    expressions, \r\n    type: 'RECEIVE_EXPRESSIONS' \r\n});\r\n\r\nconst requestExpressions = () => ({ \r\n    type: 'REQUEST_EXPRESSIONS' \r\n});\r\n\r\nconst errorReceiveExpressions = () => ({ \r\n    type: 'ERROR_RECEIVE_EXPRESSIONS' \r\n});\r\n\r\n// const getExpressions = (expressionsCount) => new Promise((onSuccess) => {\r\n//     setTimeout(\r\n//         () => onSuccess(Array\r\n//         .from(new Array(expressionsCount).keys())\r\n//         .map(index => ({ name: ['2 + 2', '3 - 2', '25 / 5', '4 * 4']}))),\r\n//         2000\r\n//     );\r\n// });\r\n\r\nconst getExpressions = (expressionsCount) => {\r\n    return fetch(`localhost/8080?${expressionsCount}`)\r\n    .then(response => response.json())\r\n    .then((json) => {\r\n      //parse(json)\r\n    })\r\n};\r\n\r\nconst fetchExpresions = ({ expressionsCount }) => (dispatch) => {\r\n    dispatch(requestExpressions()); // Повідомляю стору, що роблю запит \r\n    return getExpressions(expressionsCount) // Викликаю функцію запиту студентів\r\n    .then(expressions => dispatch(receiveExpressions(expressions))) // Успіх\r\n    .catch(() => dispatch(errorReceiveExpressions())); // Помилка\r\n};\r\n\r\nexport default {\r\n    fetchExpresions,\r\n};"],"mappings":"AAAA,MAAMA,kBAAkB,GAAGC,WAAW,KAAK;EACvCA,WAAW;EACXC,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAG,OAAO;EAC9BD,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,MAAME,uBAAuB,GAAG,OAAO;EACnCF,IAAI,EAAE;AACV,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,cAAc,GAAIC,gBAAgB,IAAK;EACzC,OAAOC,KAAK,CAAE,kBAAiBD,gBAAiB,EAAC,CAAC,CACjDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEE,IAAI,IAAK;IACd;EAAA,CACD,CAAC;AACN,CAAC;AAED,MAAMC,eAAe,GAAG;EAAA,IAAC;IAAEL;EAAiB,CAAC;EAAA,OAAMM,QAAQ,IAAK;IAC5DA,QAAQ,CAACT,kBAAkB,EAAE,CAAC,CAAC,CAAC;IAChC,OAAOE,cAAc,CAACC,gBAAgB,CAAC,CAAC;IAAA,CACvCE,IAAI,CAACP,WAAW,IAAIW,QAAQ,CAACZ,kBAAkB,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IAAA,CAC/DY,KAAK,CAAC,MAAMD,QAAQ,CAACR,uBAAuB,EAAE,CAAC,CAAC,CAAC,CAAC;EACvD,CAAC;AAAA;;AAED,eAAe;EACXO;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
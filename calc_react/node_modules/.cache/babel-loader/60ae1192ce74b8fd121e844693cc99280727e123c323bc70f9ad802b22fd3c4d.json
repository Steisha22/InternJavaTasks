{"ast":null,"code":"const receiveExpressions = expressions => ({\n  expressions,\n  type: 'RECEIVE_EXPRESSIONS'\n});\nconst requestExpressions = () => ({\n  type: 'REQUEST_EXPRESSIONS'\n});\nconst errorReceiveExpressions = () => ({\n  type: 'ERROR_RECEIVE_EXPRESSIONS'\n});\nconst getExpressions = expressionsCount => new Promise(onSuccess => {\n  setTimeout(() => onSuccess(Array.from(new Array(expressionsCount).keys()).map(index => ({\n    name: `Exprssion ${index}`\n  }))), 2000);\n});\n\n// const getExpressions = () => {\n//     return fetch('')\n//     .then((res) => res.json())\n//     .then((json) => {\n//       this.setState({ history: json})\n//     })\n// };\n\nconst fetchExpresiions = _ref => {\n  let {\n    expressionsCount\n  } = _ref;\n  return dispatch => {\n    dispatch(requestExpressions()); // Повідомляю стору, що роблю запит \n    return getExpressions(expressionsCount) // Викликаю функцію запиту студентів\n    .then(expressions => dispatch(receiveExpressions(expressions))) // Успіх\n    .catch(() => dispatch(errorReceiveExpressions())); // Помилка\n  };\n};\n\nexport default {\n  fetchExpresiions\n};","map":{"version":3,"names":["receiveExpressions","expressions","type","requestExpressions","errorReceiveExpressions","getExpressions","expressionsCount","Promise","onSuccess","setTimeout","Array","from","keys","map","index","name","fetchExpresiions","dispatch","then","catch"],"sources":["C:/Study/calc_react/src/pages/Calculator/actions/calculator.js"],"sourcesContent":["const receiveExpressions = expressions => ({\r\n    expressions, \r\n    type: 'RECEIVE_EXPRESSIONS' \r\n});\r\n\r\nconst requestExpressions = () => ({ \r\n    type: 'REQUEST_EXPRESSIONS' \r\n});\r\n\r\nconst errorReceiveExpressions = () => ({ \r\n    type: 'ERROR_RECEIVE_EXPRESSIONS' \r\n});\r\n\r\nconst getExpressions= (expressionsCount) => new Promise((onSuccess) => {\r\n    setTimeout(\r\n        () => onSuccess(Array\r\n        .from(new Array(expressionsCount).keys())\r\n        .map(index => ({ name: `Exprssion ${index}`}))),\r\n        2000\r\n    );\r\n});\r\n\r\n// const getExpressions = () => {\r\n//     return fetch('')\r\n//     .then((res) => res.json())\r\n//     .then((json) => {\r\n//       this.setState({ history: json})\r\n//     })\r\n// };\r\n\r\nconst fetchExpresiions = ({ expressionsCount }) => (dispatch) => {\r\n    dispatch(requestExpressions()); // Повідомляю стору, що роблю запит \r\n    return getExpressions(expressionsCount) // Викликаю функцію запиту студентів\r\n    .then(expressions => dispatch(receiveExpressions(expressions))) // Успіх\r\n    .catch(() => dispatch(errorReceiveExpressions())); // Помилка\r\n};\r\n\r\nexport default {\r\n    fetchExpresiions,\r\n};"],"mappings":"AAAA,MAAMA,kBAAkB,GAAGC,WAAW,KAAK;EACvCA,WAAW;EACXC,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAG,OAAO;EAC9BD,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,MAAME,uBAAuB,GAAG,OAAO;EACnCF,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,MAAMG,cAAc,GAAGC,gBAAgB,IAAK,IAAIC,OAAO,CAAEC,SAAS,IAAK;EACnEC,UAAU,CACN,MAAMD,SAAS,CAACE,KAAK,CACpBC,IAAI,CAAC,IAAID,KAAK,CAACJ,gBAAgB,CAAC,CAACM,IAAI,EAAE,CAAC,CACxCC,GAAG,CAACC,KAAK,KAAK;IAAEC,IAAI,EAAG,aAAYD,KAAM;EAAC,CAAC,CAAC,CAAC,CAAC,EAC/C,IAAI,CACP;AACL,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,gBAAgB,GAAG;EAAA,IAAC;IAAEV;EAAiB,CAAC;EAAA,OAAMW,QAAQ,IAAK;IAC7DA,QAAQ,CAACd,kBAAkB,EAAE,CAAC,CAAC,CAAC;IAChC,OAAOE,cAAc,CAACC,gBAAgB,CAAC,CAAC;IAAA,CACvCY,IAAI,CAACjB,WAAW,IAAIgB,QAAQ,CAACjB,kBAAkB,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IAAA,CAC/DkB,KAAK,CAAC,MAAMF,QAAQ,CAACb,uBAAuB,EAAE,CAAC,CAAC,CAAC,CAAC;EACvD,CAAC;AAAA;;AAED,eAAe;EACXY;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
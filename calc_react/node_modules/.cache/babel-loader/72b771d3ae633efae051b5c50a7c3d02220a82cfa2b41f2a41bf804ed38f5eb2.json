{"ast":null,"code":"const receiveExpressions = expressions => ({\n  expressions,\n  type: 'RECEIVE_EXPRESSIONS'\n});\nconst requestExpressions = () => ({\n  type: 'REQUEST_EXPRESSIONS'\n});\nconst errorReceiveExpressions = () => ({\n  type: 'ERROR_RECEIVE_EXPRESSIONS'\n});\n\n// const getExpressions = (expressionsCount) => new Promise((onSuccess) => {\n//     setTimeout(\n//         () => onSuccess(Array\n//         .from(new Array(expressionsCount).keys())\n//         .map(index => ({ name: ['2 + 2', '3 - 2', '25 / 5', '4 * 4']}))),\n//         2000\n//     );\n// });\n\n//Simulating backend\n// const getExpressions = (expressionsCount) => new Promise((onSuccess) => {\n//     setTimeout(\n//         () => onSuccess(Array(['2 + 2', '3 - 1', '25 ÷ 5', '4 * 4'])),\n//         2000\n//     );\n// });\n\nconst getExpressions = expressionsCount => {\n  console.log(\"In fetch\");\n  const url = `http://localhost:8080/?count=${expressionsCount}`;\n  const options = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  };\n  return fetch(url, options);\n};\nconst fetchExpresions = _ref => {\n  let {\n    expressionsCount\n  } = _ref;\n  return dispatch => {\n    dispatch(requestExpressions()); // Повідомляю стору, що роблю запит \n    return getExpressions(expressionsCount).then(response => {\n      if (response.ok) {\n        response.json().then(expressions => dispatch(receiveExpressions(expressions))).catch(() => dispatch(errorReceiveExpressions()));\n      } else {\n        console.log('Error status ' + response.status);\n      }\n    });\n  };\n};\nexport default {\n  fetchExpresions\n};","map":{"version":3,"names":["receiveExpressions","expressions","type","requestExpressions","errorReceiveExpressions","getExpressions","expressionsCount","console","log","url","options","method","headers","fetch","fetchExpresions","dispatch","then","response","ok","json","catch","status"],"sources":["C:/Study/calc_react/src/pages/Calculator/actions/calculator.js"],"sourcesContent":["const receiveExpressions = expressions => ({\r\n    expressions, \r\n    type: 'RECEIVE_EXPRESSIONS' \r\n});\r\n\r\nconst requestExpressions = () => ({ \r\n    type: 'REQUEST_EXPRESSIONS' \r\n});\r\n\r\nconst errorReceiveExpressions = () => ({ \r\n    type: 'ERROR_RECEIVE_EXPRESSIONS' \r\n});\r\n\r\n// const getExpressions = (expressionsCount) => new Promise((onSuccess) => {\r\n//     setTimeout(\r\n//         () => onSuccess(Array\r\n//         .from(new Array(expressionsCount).keys())\r\n//         .map(index => ({ name: ['2 + 2', '3 - 2', '25 / 5', '4 * 4']}))),\r\n//         2000\r\n//     );\r\n// });\r\n\r\n//Simulating backend\r\n// const getExpressions = (expressionsCount) => new Promise((onSuccess) => {\r\n//     setTimeout(\r\n//         () => onSuccess(Array(['2 + 2', '3 - 1', '25 ÷ 5', '4 * 4'])),\r\n//         2000\r\n//     );\r\n// });\r\n\r\nconst getExpressions = (expressionsCount) => {\r\n    console.log(\"In fetch\")\r\n    const url = `http://localhost:8080/?count=${expressionsCount}`;\r\n    const options = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n    };\r\n    return fetch(url, options);\r\n};\r\n\r\nconst fetchExpresions = ({ expressionsCount }) => (dispatch) => {\r\n    dispatch(requestExpressions()); // Повідомляю стору, що роблю запит \r\n    return getExpressions(expressionsCount)\r\n    .then(response => {\r\n        if (response.ok){\r\n            response.json()\r\n            .then(expressions => dispatch(receiveExpressions(expressions)))\r\n            .catch(() => dispatch(errorReceiveExpressions()));\r\n        }\r\n        else {\r\n            console.log('Error status ' + response.status)\r\n        }\r\n    })\r\n};\r\n\r\nexport default {\r\n    fetchExpresions,\r\n};"],"mappings":"AAAA,MAAMA,kBAAkB,GAAGC,WAAW,KAAK;EACvCA,WAAW;EACXC,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAG,OAAO;EAC9BD,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,MAAME,uBAAuB,GAAG,OAAO;EACnCF,IAAI,EAAE;AACV,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,cAAc,GAAIC,gBAAgB,IAAK;EACzCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvB,MAAMC,GAAG,GAAI,gCAA+BH,gBAAiB,EAAC;EAC9D,MAAMI,OAAO,GAAG;IACZC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC;EACD,OAAOC,KAAK,CAACJ,GAAG,EAAEC,OAAO,CAAC;AAC9B,CAAC;AAED,MAAMI,eAAe,GAAG;EAAA,IAAC;IAAER;EAAiB,CAAC;EAAA,OAAMS,QAAQ,IAAK;IAC5DA,QAAQ,CAACZ,kBAAkB,EAAE,CAAC,CAAC,CAAC;IAChC,OAAOE,cAAc,CAACC,gBAAgB,CAAC,CACtCU,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAE,EAAC;QACZD,QAAQ,CAACE,IAAI,EAAE,CACdH,IAAI,CAACf,WAAW,IAAIc,QAAQ,CAACf,kBAAkB,CAACC,WAAW,CAAC,CAAC,CAAC,CAC9DmB,KAAK,CAAC,MAAML,QAAQ,CAACX,uBAAuB,EAAE,CAAC,CAAC;MACrD,CAAC,MACI;QACDG,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGS,QAAQ,CAACI,MAAM,CAAC;MAClD;IACJ,CAAC,CAAC;EACN,CAAC;AAAA;AAED,eAAe;EACXP;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}